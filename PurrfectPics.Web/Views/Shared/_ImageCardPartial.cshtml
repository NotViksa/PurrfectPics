@model PurrfectPics.Data.Models.CatImage
@inject PurrfectPics.Services.Interfaces.IFavoriteService FavoriteService
@inject PurrfectPics.Services.Interfaces.IVoteService VoteService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var isFavorited = false;
    var userVote = (bool?)null;
    var score = 0;

    if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
    {
        var userId = HttpContextAccessor.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
        isFavorited = await FavoriteService.IsFavoritedAsync(userId, Model.Id);
        userVote = await VoteService.GetUserVoteAsync(userId, Model.Id);
    }
    score = await VoteService.GetImageScoreAsync(Model.Id);
}

<div class="card h-100">
    <a asp-controller="CatImage" asp-action="Details" asp-route-id="@Model.Id">
        <img src="@Model.ImageUrl" class="card-img-top" alt="@Model.Title" style="height: 200px; object-fit: cover;">
    </a>
    <div class="card-body d-flex flex-column">
        <h5 class="card-title">@Model.Title</h5>
        <div class="d-flex flex-wrap mb-2">
            @foreach (var tag in Model.Tags.Take(3))
            {
                <a asp-controller="CatImage" asp-action="Tag" asp-route-tagName="@tag.Name"
                   class="badge bg-secondary me-1 mb-1">@tag.Name</a>
            }
        </div>

        @if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
        {
            <div class="mt-auto d-flex justify-content-between align-items-center">
                <!-- Voting Controls -->
                <div class="vote-controls d-flex align-items-center">
                    <form asp-controller="CatImage" asp-action="SubmitVote"
                          asp-route-imageId="@Model.Id" asp-route-isUpvote="true"
                          method="post" class="vote-form upvote-form me-1">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-sm p-1 @(userVote == true ? "btn-success" : "btn-outline-secondary")">
                            <i class="bi bi-arrow-up"></i>
                        </button>
                    </form>

                    <span class="vote-score mx-1 fw-bold" style="min-width: 20px; text-align: center">@score</span>

                    <form asp-controller="CatImage" asp-action="SubmitVote"
                          asp-route-imageId="@Model.Id" asp-route-isUpvote="false"
                          method="post" class="vote-form downvote-form me-3">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-sm p-1 @(userVote == false ? "btn-danger" : "btn-outline-secondary")">
                            <i class="bi bi-arrow-down"></i>
                        </button>
                    </form>
                </div>

                <!-- Favorite Button -->
                <form asp-controller="CatImage" asp-action="ToggleFavorite" asp-route-imageId="@Model.Id"
                      method="post" class="favorite-form">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-sm @(isFavorited ? "btn-danger" : "btn-outline-secondary")">
                        <i class="bi @(isFavorited ? "bi-heart-fill" : "bi-heart")"></i>
                    </button>
                </form>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Favorite
            $('.favorite-form').submit(function(e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function(data) {
                        var btn = form.find('button');
                        btn.toggleClass('btn-danger btn-outline-secondary');
                        btn.find('i').toggleClass('bi-heart-fill bi-heart');
                    }
                });
            });

            // Voting
            $('.vote-form').submit(function(e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function(data) {
                        if (data.success) {
                            // Update score display
                            $('.vote-score').text(data.score);

                            // Update button states
                            var upButton = $('.upvote-form button');
                            var downButton = $('.downvote-form button');

                            if (form.hasClass('upvote-form')) {
                                upButton.toggleClass('btn-outline-secondary btn-success');
                                downButton.removeClass('btn-danger').addClass('btn-outline-secondary');
                            } else {
                                downButton.toggleClass('btn-outline-secondary btn-danger');
                                upButton.removeClass('btn-success').addClass('btn-outline-secondary');
                            }
                        }
                    }
                });
            });
        });
    </script>
}