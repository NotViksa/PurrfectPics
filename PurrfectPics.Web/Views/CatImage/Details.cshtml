@using System.Security.Claims
@model PurrfectPics.Data.Models.CatImage

@{
    ViewData["Title"] = Model.Title;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <img src="@Model.ImageUrl" class="img-fluid rounded" alt="@Model.Title">
        </div>
        <div class="col-md-4">
            <h1>@Model.Title</h1>
            <p class="lead">@Model.Description</p>

            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Image Details</h5>
                    <p class="card-text">
                        <strong>Uploaded by:</strong> @(Model.UploadedBy?.DisplayName ?? "Unknown")<br>
                        <strong>Date:</strong> @Model.UploadDate.ToString("MMMM dd, yyyy")<br>
                        <strong>Tags:</strong>
                        @foreach (var tag in Model.Tags)
                        {
                            <a asp-action="Tag" asp-route-tagName="@tag.Name" class="badge bg-secondary me-1">@tag.Name</a>
                        }
                    </p>
                </div>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="d-flex gap-2 mb-3">
                    <!-- Favorite Button -->
                    <form asp-action="ToggleFavorite" asp-route-imageId="@Model.Id" method="post" class="flex-grow-1">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn @(ViewBag.IsFavorited ? "btn-danger" : "btn-outline-secondary") w-100">
                            <i class="bi @(ViewBag.IsFavorited ? "bi-heart-fill" : "bi-heart")"></i>
                            @(ViewBag.IsFavorited ? "Remove Favorite" : "Add Favorite")
                        </button>
                    </form>

                    <!-- Voting Controls -->
                    <form asp-action="SubmitVote" asp-route-imageId="@Model.Id" asp-route-isUpvote="true" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn @(ViewBag.UserVote == true ? "btn-success" : "btn-outline-secondary")">
                            <i class="bi bi-arrow-up"></i>
                        </button>
                    </form>

                    <span class="px-2 align-self-center fw-bold">@ViewBag.Score</span>

                    <form asp-action="SubmitVote" asp-route-imageId="@Model.Id" asp-route-isUpvote="false" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn @(ViewBag.UserVote == false ? "btn-danger" : "btn-outline-secondary")">
                            <i class="bi bi-arrow-down"></i>
                        </button>
                    </form>
                </div>
            }

            @if (User.Identity.IsAuthenticated && (Model.UploadedById == User.FindFirstValue(ClaimTypes.NameIdentifier) || User.IsInRole("Administrator")))
            {
                <form asp-action="Delete" method="post" class="mt-3" id="deleteForm">
                    <input type="hidden" name="id" value="@Model.Id" />
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger"
                            onclick="return confirm('Are you sure you want to delete this image?')">
                        Delete Image
                    </button>
                </form>
            }

            <div class="mt-5">
                <h3>Comments</h3>

                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-controller="Comment" asp-action="AddComment" method="post" class="mb-4">
                        <input type="hidden" name="catImageId" value="@Model.Id" />
                        <div class="mb-3">
                            <textarea name="content" class="form-control" rows="3" placeholder="Add a comment..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Post Comment</button>
                    </form>
                }

                <div class="mt-4">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-3 comment-card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <!-- Profile Picture -->
                                    <div class="me-3">
                                        <img src="@comment.PostedBy?.ProfileImageUrl"
                                             class="rounded-circle"
                                             style="width: 40px; height: 40px; object-fit: cover"
                                             alt="@comment.PostedBy?.DisplayName">
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <strong>@comment.PostedBy?.DisplayName</strong>
                                                <small class="text-muted ms-2">@comment.PostedDate.ToString("MMMM dd, yyyy")</small>
                                            </div>

                                            @if (User.Identity.IsAuthenticated &&
                                                                                    (comment.PostedById == User.FindFirstValue(ClaimTypes.NameIdentifier) ||
                                                                                    User.IsInRole("Administrator")))
                                            {
                                                <div class="btn-group" role="group">
                                                    <!-- Edit Button (only for comment owner) -->
                                                    @if (comment.PostedById == User.FindFirstValue(ClaimTypes.NameIdentifier))
                                                    {
                                                        <button class="btn btn-sm btn-outline-primary me-2 edit-comment-btn"
                                                                data-comment-id="@comment.Id"
                                                                data-comment-content="@comment.Content">
                                                            <i class="bi bi-pencil"></i> Edit
                                                        </button>
                                                    }

                                                    <!-- Delete Button -->
                                                    <form asp-controller="Comment" asp-action="DeleteComment" method="post"
                                                          onsubmit="return confirm('Are you sure you want to delete this comment?');">
                                                        <input type="hidden" name="commentId" value="@comment.Id" />
                                                        <input type="hidden" name="catImageId" value="@Model.Id" />
                                                        <button type="submit"
                                                                class="btn btn-sm @(User.IsInRole("Administrator") ? "btn-outline-danger" : "btn-outline-danger")"
                                                                title="@(User.IsInRole("Administrator") ? "Delete as administrator" : "Delete your comment")">
                                                            <i class="bi bi-trash"></i> Delete
                                                        </button>
                                                    </form>
                                                </div>
                                            }
                                        </div>

                                        <!-- Comment Content -->
                                        <p class="mt-2 mb-0 comment-content" data-comment-id="@comment.Id">@comment.Content</p>

                                        <!-- Edit Form (Hidden by default) -->
                                        <form asp-controller="Comment" asp-action="EditComment" method="post"
                                              class="edit-comment-form mt-2 d-none" data-comment-id="@comment.Id">
                                            <input type="hidden" name="commentId" value="@comment.Id" />
                                            <input type="hidden" name="catImageId" value="@Model.Id" />
                                            <div class="mb-2">
                                                <textarea name="content" class="form-control" rows="2" required>@comment.Content</textarea>
                                            </div>
                                            <div>
                                                <button type="submit" class="btn btn-sm btn-primary">Save</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary cancel-edit-btn">Cancel</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle favorite and vote forms with AJAX
            $('form:not(#deleteForm):not(.edit-comment-form)').submit(function(e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function(data) {
                        if (form.attr('action').includes('ToggleFavorite')) {
                            // Update favorite button
                            var btn = form.find('button');
                            btn.toggleClass('btn-danger btn-outline-secondary');
                            btn.find('i').toggleClass('bi-heart-fill bi-heart');
                            btn.text(btn.hasClass('btn-danger') ? ' Remove Favorite' : ' Add Favorite');
                        } else if (form.attr('action').includes('SubmitVote') ||
                                  form.attr('action').includes('AddComment') ||
                                  form.attr('action').includes('DeleteComment')) {
                            // Reload page to update display
                            location.reload();
                        }
                    }
                });
            });

            // Edit comment button click
            $('.edit-comment-btn').click(function() {
                const commentId = $(this).data('comment-id');
                $(`.comment-content[data-comment-id="${commentId}"]`).addClass('d-none');
                $(`.edit-comment-form[data-comment-id="${commentId}"]`).removeClass('d-none');
            });

            // Cancel edit button
            $('.cancel-edit-btn').click(function() {
                const form = $(this).closest('.edit-comment-form');
                const commentId = form.data('comment-id');
                form.addClass('d-none');
                $(`.comment-content[data-comment-id="${commentId}"]`).removeClass('d-none');
            });
        });
    </script>
}